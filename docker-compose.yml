version: '3.9'  # use 3.9 para compatibilidade total com Compose V2

services:
  db:
    image: postgres:latest
    container_name: db
    environment:
      POSTGRES_DB: SalesApi
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres#2025@
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - evaluation-network

  sales-api:
    build:
      context: .
      dockerfile: src/SalesApi/Dockerfile
      args:
        IMAGE_TAG: ${IMAGE_TAG:-latest}
    image: dyegoalbuquerque/sales-api:${IMAGE_TAG:-latest}
    container_name: sales-api
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8090:8090"
    environment:
      - ConnectionStrings__SalesApiDb=Host=db;Database=SalesApi;Username=postgres;Password=postgres#2025@;Port=5432
    networks:
      - evaluation-network

  gateway:
    build:
      context: .
      dockerfile: src/Gateway/Dockerfile
    image: dyegoalbuquerque/ocelot-gateway:${IMAGE_TAG:-latest}
    container_name: ocelot-gateway
    depends_on:
      sales-api:
        condition: service_started
    ports:
      - "7777:7777"
    environment:
      - ASPNETCORE_URLS=http://+:7777
    networks:
      - evaluation-network

  airflow:
    build:
      context: ./src/Airflow
      dockerfile: Dockerfile
    image: dyegoalbuquerque/airflow-etl:latest
    container_name: airflow
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - SALES_DATA_URL=${SALES_DATA_URL}
    volumes:
      - ./src/Airflow/dags:/opt/airflow/dags
      - ./src/Airflow/logs:/opt/airflow/logs
      - ./src/Airflow/plugins:/opt/airflow/plugins
      - ./src/Airflow/requirements.txt:/requirements.txt
    networks:
      - evaluation-network

networks:
  evaluation-network:
    driver: bridge
